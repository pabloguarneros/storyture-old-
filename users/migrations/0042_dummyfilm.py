# Generated by Django 3.1.6 on 2021-03-16 22:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.models


class Migration(migrations.Migration):

    dependencies = [
        ('films', '0031_delete_dummyfilm'),
        ('users', '0041_auto_20210316_1636'),
    ]

    operations = [
        migrations.CreateModel(
            name='DummyFilm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.BooleanField(default=0)),
                ('movie_ID', models.IntegerField()),
                ('title', models.CharField(blank=True, max_length=240, null=True)),
                ('alt_tt_1', models.CharField(blank=True, default='', max_length=240, null=True)),
                ('alt_tt_2', models.CharField(blank=True, default='', max_length=240, null=True)),
                ('year', models.CharField(max_length=4)),
                ('minutes', models.IntegerField(blank=True, default=0, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('trailer', models.URLField(blank=True, null=True)),
                ('imdb_score', models.FloatField(blank=True, null=True)),
                ('rotten_score', models.IntegerField(blank=True, null=True)),
                ('imdb_code', models.CharField(blank=True, max_length=12)),
                ('poster_pic', models.ImageField(default='posters/default/poster.jpg', upload_to=users.models.dummy_poster_directory_path)),
                ('bya', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='update_pushed_by', to=settings.AUTH_USER_MODEL)),
                ('country', models.ManyToManyField(blank=True, to='films.Country')),
                ('genre', models.ManyToManyField(blank=True, related_name='dummy_film_genres', to='films.Genre')),
                ('language', models.ManyToManyField(blank=True, to='films.Language')),
                ('productions', models.ManyToManyField(blank=True, to='films.ProdCo')),
                ('tags', models.ManyToManyField(blank=True, related_name='dummy_tags', to='films.Tag')),
            ],
        ),
    ]
